name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10]
        node-version: [18]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run backend tests
        working-directory: ./backend
        run: |
          if [ -f pytest.ini ] || [ -d tests ] || ls | grep -q "test"; then
            pip install pytest || true
            pytest -q || true
          else
            echo "No backend tests detected"
          fi

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: |
          if [ -f package.json ]; then npm ci; fi

      - name: Run frontend build and tests
        working-directory: ./frontend
        run: |
          if [ -f package.json ]; then
            npm run build --if-present
            if npm run | grep -q "test"; then npm test --if-present || true; fi
          else
            echo "No frontend detected"
          fi

      - name: Upload build artifacts (optional)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/.next || ''

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Trigger Render deploy (backend)
        if: secrets.RENDER_API_KEY && secrets.RENDER_SERVICE_ID
        run: |
          echo "Triggering Render deploy for service ${{ secrets.RENDER_SERVICE_ID }}"
          curl -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            --data '{"clearCache":true}'

      - name: Deploy to Vercel (frontend) - optional
        if: secrets.VERCEL_TOKEN
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: frontend
          prod: true
