name: Scheduled AI Agent Sweep

on:
  # Run daily at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'production'
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  ai-sweep:
    name: AI Agent Deployment Sweep
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Node.js dependencies
        run: npm install

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run AI Agent Sweep
        env:
          # Environment Configuration
          ENVIRONMENT: ${{ github.event.inputs.environment || 'production' }}
          NODE_ENV: ${{ github.event.inputs.environment || 'production' }}
          
          # URLs
          BACKEND_URL: ${{ secrets.BACKEND_URL }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          
          # Database (Supabase)
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          
          # Payment Providers
          PAYPAL_CLIENT_ID: ${{ secrets.PAYPAL_CLIENT_ID }}
          PAYPAL_SECRET: ${{ secrets.PAYPAL_SECRET }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          
          # Deployment
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          
          # Monitoring
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          HEALTHCHECKS_URL: ${{ secrets.HEALTHCHECKS_URL }}
        run: |
          echo "Starting AI Agent Sweep..."
          node ai-agent-sweep.js
        continue-on-error: true

      - name: Upload sweep report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sweep-report-${{ github.run_number }}
          path: /tmp/sweep-report-*.json
          retention-days: 30

      - name: Notify on failure
        if: failure()
        run: |
          echo "::error::AI Agent Sweep failed. Check the logs and sweep report for details."

      - name: Summary
        if: always()
        run: |
          echo "### AI Agent Sweep Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** ${{ github.event.inputs.environment || 'production' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the uploaded artifacts for detailed sweep reports." >> $GITHUB_STEP_SUMMARY
