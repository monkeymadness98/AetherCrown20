name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy-backend-render:
    name: Deploy backend to Render
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Trigger Render Deploy (via API)
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          if [ -z "$RENDER_API_KEY" ] || [ -z "$RENDER_SERVICE_ID" ]; then
            echo "RENDER_API_KEY or RENDER_SERVICE_ID not set; skipping Render deploy."
            exit 0
          fi
          echo "Triggering Render deploy for service $RENDER_SERVICE_ID"
          curl -s -X POST "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -d '{}' \
            | jq .

  deploy-frontend-vercel:
    name: Deploy frontend to Vercel
    runs-on: ubuntu-latest
    needs: deploy-backend-render
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.0'
      - name: Install vercel CLI
        run: npm i -g vercel@28
      - name: Deploy to Vercel (preview/prod)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          if [ -z "$VERCEL_TOKEN" ]; then
            echo "VERCEL_TOKEN not set; skipping Vercel deploy."
            exit 0
          fi
          # Deploy frontend (root is frontend/)
          vercel deploy frontend --prod --token $VERCEL_TOKEN
