name: Auto-Fix & Deploy

on:
  workflow_dispatch:
    inputs:
      target_pr:
        description: 'PR branch to reconcile'
        required: true
        default: 'copilot/verify-repo-structure'

jobs:
  reconcile-pr:
    name: Reconcile PR and Regenerate Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed to access all branches

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.0'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Configure Git
        run: |
          git config user.name "AI Merge Bot"
          git config user.email "bot@example.com"

      - name: Fetch PR branch and main
        run: |
          git fetch origin
          git checkout -b pr-branch ${{ github.event.inputs.target_pr }}
          git fetch origin main

      - name: Merge main into PR branch preferring PR content
        run: |
          git merge origin/main -X ours --no-edit || echo "Resolve conflicts manually if needed"

      - name: Install frontend dependencies & regenerate lockfile
        run: |
          cd frontend
          npm ci
          git add package-lock.json
          git commit -m "chore: regenerate frontend package-lock after auto-merge" || echo "No changes to commit"

      - name: Install backend dependencies
        run: |
          cd backend
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Run frontend build
        run: |
          cd frontend
          npm run build

      - name: Run backend sanity check
        run: |
          cd backend
          source .venv/bin/activate
          python -c "import main; print('backend import OK')"

      - name: Push reconciled branch
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git push --force-with-lease https://x-access-token:${GH_PAT}@github.com/${{ github.repository }} pr-branch:${{ github.event.inputs.target_pr }}

  deploy-render-vercel:
    name: Deploy Backend & Frontend
    runs-on: ubuntu-latest
    needs: reconcile-pr
    steps:
      - uses: actions/checkout@v4

      - name: Trigger Render Deploy
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          curl -s -X POST "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d '{}' | jq .

      - name: Deploy Frontend to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          npm i -g vercel@28
          vercel deploy frontend --prod --token $VERCEL_TOKEN
